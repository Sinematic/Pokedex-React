import "../styles/Filters.css"

function Filters(props) {

    const {sort, setSort} = props
    const {search, setSearch} = props
    const {stats, displayStats} = props
    const {retro, displayRetro} = props

    const resetFilters = () => {
        setSort("pokemon/")
        setSearch("")
        displayStats(false)
        displayRetro(false)
    }

    return (
        <section className="filters">
            
            <select onChange={(event) => setSort(event.target.value)}>
                <option value="pokemon/">Afficher toutes les g√©n√©rations</option>
                <option value="pokemon/generation/1">Afficher la premi√®re g√©n√©ration</option>
                <option value="pokemon/generation/2">Afficher la deuxi√®me g√©n√©ration</option>
                <option value="pokemon/generation/3">Afficher la troisi√®me g√©n√©ration</option>
                <option value="pokemon/generation/4">Afficher la quatri√®me g√©n√©ration</option>
                <option value="pokemon/generation/5">Afficher la cinqui√®me g√©n√©ration</option>
                <option value="pokemon/generation/6">Afficher la sixi√®me g√©n√©ration</option>
                <option value="pokemon/generation/7">Afficher la septi√®me g√©n√©ration</option>
                <option value="pokemon/generation/8">Afficher la huiti√®me g√©n√©ration</option>
            </select>       

            <button onClick={() => displayStats(!stats)} className="stats">{stats ? "Cacher les statistiques" : "Afficher les statistiques"}</button>
            <button onClick={() => setSort("legendaries")} className="btn-legendaries">Afficher les pok√©mons l√©gendaires</button>
            <input onChange={(event) => setSearch(event.target.value)} value={search} type="search" className="search" placeholder="Rechercher un pok√©mon" />
            <button onClick={() => setSort(`pokemon/${search}`)} className="submit">üîé</button>
            <button onClick={() => displayRetro(!retro)} className="retro">{retro ? "Quitter le mode r√©tro üòÑ" : "Passer en mode R√©tro üïπÔ∏è"}</button>
            <button onClick={() => setSort("random/team")} className="random">G√©n√©rer une √©quipe al√©atoire</button> 
            <button onClick={() => setSort("random/team/suggest")} className="balanced">G√©n√©rer une √©quipe √©quilibr√©e</button>
            <button onClick={() => resetFilters()} className="reset">R√©initialiser les filtres</button>

            {props.types ? <select onChange={(event) => setSort(event.target.value)} className="select-type">
                <option value="pokemon/">Afficher un type</option>
                {props.types.map((type) => ( 
                    <option key={type[0]} value={"pokemon/type/" + type}>{type}</option>
                ))}
                </select> : null}

        </section>
    )
}

export default Filters